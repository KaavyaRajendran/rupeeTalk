[{"D:\\expenso-master\\expenso-master\\src\\index.js":"1","D:\\expenso-master\\expenso-master\\src\\App.js":"2","D:\\expenso-master\\expenso-master\\src\\context\\context.js":"3","D:\\expenso-master\\expenso-master\\src\\styles.js":"4","D:\\expenso-master\\expenso-master\\src\\context\\contextReducer.js":"5","D:\\expenso-master\\expenso-master\\src\\components\\Details\\Details.jsx":"6","D:\\expenso-master\\expenso-master\\src\\components\\Main\\Main.jsx":"7","D:\\expenso-master\\expenso-master\\src\\components\\Details\\styles.js":"8","D:\\expenso-master\\expenso-master\\src\\useTransactions.js":"9","D:\\expenso-master\\expenso-master\\src\\components\\Main\\styles.js":"10","D:\\expenso-master\\expenso-master\\src\\components\\InfoCard\\InfoCard.jsx":"11","D:\\expenso-master\\expenso-master\\src\\components\\Main\\Form\\Form.jsx":"12","D:\\expenso-master\\expenso-master\\src\\components\\Main\\List\\List.jsx":"13","D:\\expenso-master\\expenso-master\\src\\constants\\categories.js":"14","D:\\expenso-master\\expenso-master\\src\\components\\Main\\List\\styles.js":"15","D:\\expenso-master\\expenso-master\\src\\utils\\formatDate.js":"16","D:\\expenso-master\\expenso-master\\src\\components\\Main\\Form\\styles.js":"17","D:\\expenso-master\\expenso-master\\src\\components\\Snackbar\\Snackbar.jsx":"18","D:\\expenso-master\\expenso-master\\src\\components\\Snackbar\\styles.js":"19"},{"size":441,"mtime":1654954764224,"results":"20","hashOfConfig":"21"},{"size":1647,"mtime":1654955405547,"results":"22","hashOfConfig":"21"},{"size":1574,"mtime":1654956211777,"results":"23","hashOfConfig":"21"},{"size":551,"mtime":1654952719593,"results":"24","hashOfConfig":"21"},{"size":699,"mtime":1654954861614,"results":"25","hashOfConfig":"21"},{"size":707,"mtime":1654955532417,"results":"26","hashOfConfig":"21"},{"size":1367,"mtime":1654955482219,"results":"27","hashOfConfig":"21"},{"size":237,"mtime":1654954099087,"results":"28","hashOfConfig":"21"},{"size":1302,"mtime":1654952719624,"results":"29","hashOfConfig":"21"},{"size":490,"mtime":1654954447685,"results":"30","hashOfConfig":"21"},{"size":412,"mtime":1654952719934,"results":"31","hashOfConfig":"21"},{"size":5202,"mtime":1654955085037,"results":"32","hashOfConfig":"21"},{"size":1623,"mtime":1654954365541,"results":"33","hashOfConfig":"21"},{"size":1659,"mtime":1654952720217,"results":"34","hashOfConfig":"21"},{"size":398,"mtime":1654952720120,"results":"35","hashOfConfig":"21"},{"size":340,"mtime":1654952720307,"results":"36","hashOfConfig":"21"},{"size":235,"mtime":1654952720063,"results":"37","hashOfConfig":"21"},{"size":933,"mtime":1654952720154,"results":"38","hashOfConfig":"21"},{"size":195,"mtime":1654952720182,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1czoywe",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"D:\\expenso-master\\expenso-master\\src\\index.js",[],["81","82"],"D:\\expenso-master\\expenso-master\\src\\App.js",[],"D:\\expenso-master\\expenso-master\\src\\context\\context.js",[],"D:\\expenso-master\\expenso-master\\src\\styles.js",[],"D:\\expenso-master\\expenso-master\\src\\context\\contextReducer.js",[],"D:\\expenso-master\\expenso-master\\src\\components\\Details\\Details.jsx",[],"D:\\expenso-master\\expenso-master\\src\\components\\Main\\Main.jsx",[],"D:\\expenso-master\\expenso-master\\src\\components\\Details\\styles.js",[],"D:\\expenso-master\\expenso-master\\src\\useTransactions.js",[],"D:\\expenso-master\\expenso-master\\src\\components\\Main\\styles.js",[],"D:\\expenso-master\\expenso-master\\src\\components\\InfoCard\\InfoCard.jsx",[],"D:\\expenso-master\\expenso-master\\src\\components\\Main\\Form\\Form.jsx",["83"],"import React, { useState, useEffect, useContext } from 'react'\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { ExpenseTrackerContext } from '../../../context/context'\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'\nimport { v4 as uid } from 'uuid'\nimport { useSpeechContext } from '@speechly/react-client'\n\nimport useStyles from './styles'\nimport { incomeCategories, expenseCategories } from '../../../constants/categories'\nimport formatDate from '../../../utils/formatDate'\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n\n};\n\nconst Form = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState);\n    const { addTransaction } = useContext(ExpenseTrackerContext);\n    const { segment } = useSpeechContext();\n    const [open, setOpen] = useState(false);\n\n    const createTransaction = () => {\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n        const transaction = { ...formData, amount: Number(formData.amount), id:uid() }\n        setOpen(true)\n        addTransaction(transaction)\n        setFormData(initialState)\n    }\n\n    useEffect(() => {\n            if(segment) {\n                if (segment.intent.intent === 'add_expense')\n                    setFormData({ ...formData, type: 'Expense'})\n                else if (segment.intent.intent === 'add_income')\n                    setFormData({ ...formData, type: 'Income'})\n                else if (segment.isFinal && segment.intent.intent === 'create_transaction')\n                    return createTransaction()\n                else if(segment.isFinal && segment.intent.intent === 'cancel_transaction')\n                    return setFormData(initialState)\n                segment.entities.forEach(e => {\n                    const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\n                    switch (e.type) {\n                        case 'amount':\n                            setFormData({ ...formData, amount: e.value})\n                            break;\n                        case 'category': \n                            if(incomeCategories.map(iC => iC.type).includes(category))\n                                setFormData({ ...formData, type: 'Income', category})\n                            else if(expenseCategories.map(iC => iC.type).includes(category))\n                                setFormData({ ...formData, type: 'Expense', category})\n                            break\n                        case 'date':\n                            setFormData({ ...formData, date: e.value})\n                            break    \n                        default:\n                            break;\n                    }\n            });\n\n            if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date)\n                createTransaction()\n            }   \n\n            \n    }, [segment]);\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories    \n    return (\n        <Grid container spacing={2}>\n            <CustomizedSnackbar open={open} setOpen={setOpen}/>\n            <Grid item xs={12}>\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom  style={{color: 'white'}}>\n                  \n                   { segment && segment.words.map((w) => w.value).join(' ') }\n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel style={{color: 'white'}}>\n                        Type\n                    </InputLabel>\n                    <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value})}>\n                        <MenuItem value=\"Income\" >Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth style={{color: 'white'}}>\n                    <InputLabel  style={{color: 'white'}}>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value})}>\n    {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type} >{c.type}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} >\n                <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e) => setFormData({...formData, amount: e.target.value})}/>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField type=\"date\" label=\"Date\" fullWidth  value={formData.date} onChange={(e) => setFormData({...formData, date: formatDate(e.target.value)})}/>\n            </Grid>\n            <Button className={classes.button} variant=\"outlined\" onClick = { createTransaction } color=\"secondary\" fullWidth>\n                Create\n            </Button>\n        </Grid>\n    )\n}\n\nexport default Form\n","D:\\expenso-master\\expenso-master\\src\\components\\Main\\List\\List.jsx",[],"D:\\expenso-master\\expenso-master\\src\\constants\\categories.js",[],"D:\\expenso-master\\expenso-master\\src\\components\\Main\\List\\styles.js",[],"D:\\expenso-master\\expenso-master\\src\\utils\\formatDate.js",[],"D:\\expenso-master\\expenso-master\\src\\components\\Main\\Form\\styles.js",[],"D:\\expenso-master\\expenso-master\\src\\components\\Snackbar\\Snackbar.jsx",[],"D:\\expenso-master\\expenso-master\\src\\components\\Snackbar\\styles.js",[],["84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":70,"column":8,"nodeType":"92","endLine":70,"endColumn":17,"suggestions":"93"},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["98"],["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"101","text":"102"},[3036,3045],"[createTransaction, formData, segment]"]